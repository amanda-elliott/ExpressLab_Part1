{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"div {\\r\\n    border: 1px solid black;\\r\\n    margin: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx1QkFBdUI7SUFDdkIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2IHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgbWFyZ2luOiAyMHB4O1xyXG59Il19 */\"","module.exports = \"<body>  \\n  <h1>Shopping Cart</h1>\\n\\n  <div *ngFor=\\\"let item of items; index as i\\\">\\n    <p>{{ item.id }}</p>\\n    <p>{{ item.product }}</p>\\n    <p>{{ item.price }}</p>\\n    <p>{{ item.quantity }}</p>\\n    <button (click)=\\\"deleteItem(id)\\\"> X </button>\\n  </div>\\n\\n</body>\\n\\n\"","import { Component } from '@angular/core';\nimport { CartService } from './cart.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Express-Lab';\n\n  items: any;\n\n  constructor(private cartService: CartService) {\n\n    this.cartService.getAllItems().subscribe(response => {\n      this.items = response;\n    });\n  }\n\n  addNewItem(newItem) {\n    this.cartService.addItem(newItem).subscribe(response => {\n      this.items = response;\n    });\n  }\n\n  deleteItem(id) {\n    this.cartService.deleteItem(id).subscribe(response => {\n      this.items = response;\n    });\n  }\n\n  updateItem(id, newItem) {\n    this.cartService.updateItem(id, newItem).subscribe(response => {\n      this.items = response;\n    });\n  }\n\n}\n ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { CartService } from \"./cart.service\"; \nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [CartService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllItems() {\n    return this.http.get(\"/api/cartitems\", { responseType: \"json\"});\n  }\n \n  addItem(newItem) {\n    return this.http.post(\"/api/cartitems\", { product: newItem }, { responseType: \"json\"});\n  }\n\n  deleteItem(id) {\n    return this.http.delete(`/api/cartitems/${id}`, { responseType: \"json\"});\n  }\n\n  updateItem(id, newItem) {\n    return this.http.put(`/api/cartitems/${id}`, { product: newItem }, { responseType: \"json\"});\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}